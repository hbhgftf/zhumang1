"use strict";
const common_vendor = require("../../common/vendor.js");
exports.vueVersion = void 0;
exports.vueVersion = 3;
const VueUni = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EMPTY_OBJ: common_vendor.EMPTY_OBJ,
  EffectScope: common_vendor.EffectScope,
  Fragment: common_vendor.Fragment,
  ReactiveEffect: common_vendor.ReactiveEffect,
  Text: common_vendor.Text,
  c: common_vendor.c,
  callWithAsyncErrorHandling: common_vendor.callWithAsyncErrorHandling,
  callWithErrorHandling: common_vendor.callWithErrorHandling,
  camelize: common_vendor.camelize,
  computed: common_vendor.computed,
  createApp: common_vendor.createApp,
  createPropsRestProxy: common_vendor.createPropsRestProxy,
  createSSRApp: common_vendor.createSSRApp,
  createVNode: common_vendor.createVNode,
  createVueApp: common_vendor.createVueApp,
  customRef: common_vendor.customRef,
  d: common_vendor.d,
  defineAsyncComponent: common_vendor.defineAsyncComponent,
  defineComponent: common_vendor.defineComponent,
  defineEmits: common_vendor.defineEmits,
  defineExpose: common_vendor.defineExpose,
  defineProps: common_vendor.defineProps,
  devtoolsComponentAdded: common_vendor.devtoolsComponentAdded,
  devtoolsComponentRemoved: common_vendor.devtoolsComponentRemoved,
  devtoolsComponentUpdated: common_vendor.devtoolsComponentUpdated,
  diff: common_vendor.diff,
  e: common_vendor.e,
  effect: common_vendor.effect,
  effectScope: common_vendor.effectScope,
  f: common_vendor.f,
  findComponentPropsData: common_vendor.findComponentPropsData,
  gei: common_vendor.gei,
  getCurrentInstance: common_vendor.getCurrentInstance,
  getCurrentScope: common_vendor.getCurrentScope,
  getExposeProxy: common_vendor.getExposeProxy,
  guardReactiveProps: common_vendor.guardReactiveProps,
  h: common_vendor.h,
  hasInjectionContext: common_vendor.hasInjectionContext,
  hasQueueJob: common_vendor.hasQueueJob,
  inject: common_vendor.inject,
  injectHook: common_vendor.injectHook,
  invalidateJob: common_vendor.invalidateJob,
  get isInSSRComponentSetup() {
    return common_vendor.isInSSRComponentSetup;
  },
  isProxy: common_vendor.isProxy,
  isReactive: common_vendor.isReactive,
  isReadonly: common_vendor.isReadonly,
  isRef: common_vendor.isRef,
  isShallow: common_vendor.isShallow,
  j: common_vendor.j,
  logError: common_vendor.logError,
  m: common_vendor.m,
  markRaw: common_vendor.markRaw,
  mergeDefaults: common_vendor.mergeDefaults,
  mergeModels: common_vendor.mergeModels,
  mergeProps: common_vendor.mergeProps,
  n: common_vendor.n,
  nextTick: common_vendor.nextTick$1,
  normalizeClass: common_vendor.normalizeClass,
  normalizeProps: common_vendor.normalizeProps,
  normalizeStyle: common_vendor.normalizeStyle,
  o: common_vendor.o,
  onActivated: common_vendor.onActivated,
  onBeforeMount: common_vendor.onBeforeMount,
  onBeforeUnmount: common_vendor.onBeforeUnmount,
  onBeforeUpdate: common_vendor.onBeforeUpdate,
  onDeactivated: common_vendor.onDeactivated,
  onErrorCaptured: common_vendor.onErrorCaptured,
  onMounted: common_vendor.onMounted,
  onRenderTracked: common_vendor.onRenderTracked,
  onRenderTriggered: common_vendor.onRenderTriggered,
  onScopeDispose: common_vendor.onScopeDispose,
  onServerPrefetch: common_vendor.onServerPrefetch,
  onUnmounted: common_vendor.onUnmounted,
  onUpdated: common_vendor.onUpdated,
  p: common_vendor.p,
  patch: common_vendor.patch,
  provide: common_vendor.provide,
  proxyRefs: common_vendor.proxyRefs,
  pruneComponentPropsCache: common_vendor.pruneComponentPropsCache,
  queuePostFlushCb: common_vendor.queuePostFlushCb,
  r: common_vendor.r,
  reactive: common_vendor.reactive,
  readonly: common_vendor.readonly,
  ref: common_vendor.ref,
  resolveComponent: common_vendor.resolveComponent,
  resolveDirective: common_vendor.resolveDirective,
  resolveFilter: common_vendor.resolveFilter,
  s: common_vendor.s,
  setCurrentRenderingInstance: common_vendor.setCurrentRenderingInstance,
  setTemplateRef: common_vendor.setTemplateRef,
  setupDevtoolsPlugin: common_vendor.setupDevtoolsPlugin,
  shallowReactive: common_vendor.shallowReactive,
  shallowReadonly: common_vendor.shallowReadonly,
  shallowRef: common_vendor.shallowRef,
  sr: common_vendor.sr,
  stop: common_vendor.stop,
  t: common_vendor.t,
  toDisplayString: common_vendor.toDisplayString,
  toHandlerKey: common_vendor.toHandlerKey,
  toHandlers: common_vendor.toHandlers,
  toRaw: common_vendor.toRaw,
  toRef: common_vendor.toRef,
  toRefs: common_vendor.toRefs,
  toValue: common_vendor.toValue,
  triggerRef: common_vendor.triggerRef,
  unref: common_vendor.unref,
  updateProps: common_vendor.updateProps,
  useAttrs: common_vendor.useAttrs,
  useCssModule: common_vendor.useCssModule,
  useCssVars: common_vendor.useCssVars,
  useModel: common_vendor.useModel,
  useSSRContext: common_vendor.useSSRContext,
  useSlots: common_vendor.useSlots,
  version: common_vendor.version,
  get vueVersion() {
    return exports.vueVersion;
  },
  w: common_vendor.w,
  warn: common_vendor.warn,
  watch: common_vendor.watch,
  watchEffect: common_vendor.watchEffect,
  watchPostEffect: common_vendor.watchPostEffect,
  watchSyncEffect: common_vendor.watchSyncEffect,
  withAsyncContext: common_vendor.withAsyncContext,
  withCtx: common_vendor.withCtx,
  withDefaults: common_vendor.withDefaults,
  withDirectives: common_vendor.withDirectives,
  withModifiers: common_vendor.withModifiers,
  withScopeId: common_vendor.withScopeId
}, Symbol.toStringTag, { value: "Module" }));
exports.VueUni = VueUni;
//# sourceMappingURL=../../../.sourcemap/mp-weixin/pages-ai-desk/ai-desk-customer-uniapp/adapter-vue-uniapp.js.map
