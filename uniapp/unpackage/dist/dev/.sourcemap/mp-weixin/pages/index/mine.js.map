{"version":3,"file":"mine.js","sources":["pages/index/mine.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvbWluZS52dWU"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 顶部背景 -->\n    <view class=\"top-bg\"></view>\n    \n    <!-- 头像及登录状态 -->\n    <view class=\"box\">\n      <view class=\"head-box\">\n        <view class=\"avatar-container\">\n          <button \n            open-type=\"chooseAvatar\" \n            class=\"avatar-btn\" \n            @chooseavatar=\"handleChooseAvatar\"\n          >\n            <image \n              class=\"head-img\" \n              :src=\"login.avatar\" \n              mode=\"aspectFill\"\n            />\n          </button>\n        </view>\n        <view class=\"tip\">{{ login.show ? '点击头像可更换' : '当前未登录，请登录！' }}</view>\n        <!-- 昵称输入框 -->\n        <view class=\"nickname-container\">\n          <input \n            type=\"nickname\" \n            class=\"nickname-input\" \n            placeholder=\"请输入昵称\"\n            :value=\"login.nickname\"\n            @change=\"handleNicknameChange\"\n          />\n        </view>\n      </view>\n      \n      <!-- 登录/注册按钮（保留原始样式） -->\n      <view class=\"login-section\" v-if=\"!login.show\">\n        <!-- 邮箱登录部分 -->\n        <view class=\"email-login\">\n          <input \n            type=\"text\" \n            class=\"email-input\" \n            placeholder=\"请输入邮箱\"\n            v-model=\"email\"\n          />\n          <view class=\"code-input-group\">\n            <input \n              type=\"text\" \n              class=\"code-input\" \n              placeholder=\"请输入验证码\"\n              v-model=\"code\"\n            />\n            <button \n              class=\"send-code-btn\" \n              :disabled=\"isSendingCode\"\n              @tap=\"handleSendCode\"\n            >\n              {{ isSendingCode ? `${countdown}s后重试` : '发送验证码' }}\n            </button>\n          </view>\n          <button @tap=\"handleEmailLogin\" class=\"email-login-btn\">\n            <text class=\"login-text\">邮箱验证码登录</text>\n          </button>\n        </view>\n        \n        <!-- 分割线 -->\n        <view class=\"divider\">\n          <view class=\"divider-line\"></view>\n          <text class=\"divider-text\">或</text>\n          <view class=\"divider-line\"></view>\n        </view>\n        \n        <!-- 微信登录按钮 -->\n        <button @tap=\"handleAuth\" class=\"login-btn\">\n          <text class=\"login-text\">微信快捷登录</text>\n        </button>\n      </view>\n      \n      <!-- 功能列表（带分割线、图标和》） -->\n      <view class=\"function-list\" v-if=\"login.show\">\n        <button class=\"row\" style=\"width: 100%;\" @tap=\"navigateTo('basicInfo')\">\n          <view class=\"left\">\n            <icon class=\"icon-small\" type=\"success\" size=\"16\" color=\"green\" />\n            <text class=\"text\">基本信息</text>\n          </view>\n          <view class=\"right\">》</view>\n        </button>\n        <button class=\"row\" style=\"width: 100%;\" @tap=\"navigateTo('feedback')\">\n          <view class=\"left\">\n            <icon class=\"icon-small\" type=\"success\" size=\"16\" color=\"green\" />\n            <text class=\"text\">匿名反馈</text>\n          </view>\n          <view class=\"right\">》</view>\n        </button>\n        <button class=\"row\" style=\"width: 100%;\" @tap=\"navigateTo('about')\">\n          <view class=\"left\">\n            <icon class=\"icon-small\" type=\"success\" size=\"16\" color=\"green\" />\n            <text class=\"text\">关于我们</text>\n          </view>\n          <view class=\"right\">》</view>\n        </button>\n        <button class=\"row\" style=\"width: 100%;\" open-type=\"share\">\n          <view class=\"left\">\n            <icon class=\"icon-small\" type=\"success\" size=\"16\" color=\"green\" />\n            <text class=\"text\">分享好友</text>\n          </view>\n          <view class=\"right\">》</view>\n        </button>\n        <button class=\"row\" style=\"width: 100%;\" open-type=\"contact\">\n          <view class=\"left\">\n            <icon class=\"icon-small\" type=\"success\" size=\"16\" color=\"green\" />\n            <text class=\"text\">在线客服</text>\n          </view>\n          <view class=\"right\">》</view>\n        </button>\n      </view>\n      \n      <!-- 退出登录按钮 -->\n      <view class=\"logout-section\" v-if=\"login.show\">\n        <button @tap=\"handleLogout\" class=\"logout-btn\">\n          <text class=\"logout-text\">退出登录</text>\n        </button>\n      </view>\n    </view>\n    \n    <!-- 页脚 -->\n    <view class=\"footer\">\n      <text>© 2023 微信小程序个人中心</text>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      login: {\n        show: false,        // 是否已登录\n        avatar: '/static/default_avatar.png', // 默认头像\n        nickname: ''        // 存储昵称\n      },\n      userId: '',           // 用户ID\n      tempLocalPath: '',    // 本地临时文件路径（下载后的头像路径）\n      loading: false,       // 加载状态\n      email: '',           // 邮箱\n      code: '',            // 验证码\n      isSendingCode: false, // 是否正在发送验证码\n      countdown: 60        // 验证码倒计时\n    };\n  },\n\n  onLoad() {\n    // 恢复登录状态\n    const userInfo = uni.getStorageSync('userInfo');\n    if (userInfo && userInfo.id) {\n      this.login.show = true;\n      this.userId = userInfo.id;\n      this.login.avatar = userInfo.avatarUrl || this.login.avatar;\n      this.login.nickname = userInfo.nickname || '';\n    }\n  },\n\n  methods: {\n    // 发送验证码\n    async handleSendCode() {\n      if (!this.email) {\n        uni.showToast({ title: '请输入邮箱', icon: 'none' });\n        return;\n      }\n      \n      // 验证邮箱格式\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.email)) {\n        uni.showToast({ title: '请输入正确的邮箱格式', icon: 'none' });\n        return;\n      }\n      \n      if (this.isSendingCode) return;\n      \n      this.isSendingCode = true;\n      this.countdown = 60;\n      \n      try {\n        const response = await uni.request({\n          url: `${this.$config.baseUrl}/user/sendEmail/${this.email}`,\n          method: 'GET'\n        });\n        \n        if (response.data === \"验证码发送成功！\") {\n          uni.showToast({ title: '验证码已发送', icon: 'none' });\n          this.startCountdown();\n        } else {\n          uni.showToast({ title: response.data, icon: 'none' });\n          this.isSendingCode = false;\n        }\n      } catch (error) {\n        console.error('发送验证码失败:', error);\n        uni.showToast({ title: '发送验证码失败', icon: 'none' });\n        this.isSendingCode = false;\n      }\n    },\n    \n    // 开始倒计时\n    startCountdown() {\n      const timer = setInterval(() => {\n        if (this.countdown > 0) {\n          this.countdown--;\n        } else {\n          clearInterval(timer);\n          this.isSendingCode = false;\n        }\n      }, 1000);\n    },\n    \n    // 邮箱验证码登录\n    async handleEmailLogin() {\n      if (!this.email || !this.code) {\n        uni.showToast({ title: '请输入邮箱和验证码', icon: 'none' });\n        return;\n      }\n      \n      if (this.loading) return;\n      this.loading = true;\n      uni.showLoading({ title: '登录中...' });\n      \n      try {\n        // 直接调用邮箱登录接口\n        const loginResponse = await uni.request({\n          url: `${this.$config.baseUrl}/user/login/email`,\n          method: 'POST',\n          data: {\n            email: this.email,\n            code: this.code\n          },\n          header: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('邮箱登录响应:', loginResponse);\n        \n        if (loginResponse.data.code === 200 && loginResponse.data.success) {\n          // 登录成功，保存token和用户信息\n          const token = loginResponse.data.data.userInfo.token;\n          const userInfoFromResponse = loginResponse.data.data.userInfo;\n          \n          // 确保用户信息包含id字段\n          const userInfoToSave = {\n            ...userInfoFromResponse,\n            id: userInfoFromResponse.id // 显式提取id\n          };\n\n          uni.setStorageSync('token', token);\n          uni.setStorageSync('userInfo', userInfoToSave);\n          \n          console.log('保存的用户信息:', userInfoToSave);\n          console.log('保存的token:', token);\n          \n          // 更新组件状态\n          this.login.show = true;\n          this.login.avatar = userInfoToSave.avatarUrl || '/static/default_avatar.png';\n          this.login.nickname = userInfoToSave.nickname || '默认昵称';\n          \n          uni.showToast({ title: '登录成功', icon: 'none' });\n        } else {\n          uni.showToast({ \n            title: loginResponse.data.msg || '登录失败', \n            icon: 'none' \n          });\n        }\n      } catch (error) {\n        console.error('登录失败:', error);\n        uni.showToast({ title: '登录请求失败，请重试', icon: 'none' });\n      } finally {\n        this.loading = false;\n        uni.hideLoading();\n      }\n    },\n    \n    // 微信登录\n    async handleAuth() {\n      if (this.loading) return;\n      this.loading = true;\n      uni.showLoading({ title: '登录中...' });\n    \n      try {\n        const { code } = await uni.login({ provider: 'weixin' });\n        const loginRes = await uni.request({\n          url: `${this.$config.baseUrl}/user/login`,\n          method: 'POST',\n          data: { code },\n          header: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    \n        if (loginRes.data.code === 200) {\n          const userInfo = loginRes.data.data.userInfo;\n    \n          // 直接存储后端返回的用户信息\n          uni.setStorageSync('userInfo', userInfo);\n    \n          // 更新组件状态\n          this.login.show = true;\n          this.userId = userInfo.id;\n          this.login.avatar = userInfo.avatarUrl || '/static/default_avatar.png';\n          this.login.nickname = userInfo.nickname || '默认昵称';\n          \n          uni.showToast({ title: '登录成功', icon: 'none' });\n        } else {\n          uni.showToast({ \n            title: `登录失败：${loginRes.data.msg || '未知错误'}`, \n            icon: 'none' \n          });\n        }\n      } catch (error) {\n        console.error('登录失败:', error);\n        uni.showToast({ title: '登录请求失败，请重试', icon: 'none' });\n      } finally {\n        this.loading = false;\n        uni.hideLoading();\n      }\n    },\n    \n    // 选择头像（核心修正：先下载到本地）\n    async handleChooseAvatar(e) {\n      if (!this.login.show) {\n        uni.showToast({ title: '请先登录', icon: 'none' });\n        return;\n      }\n      \n      const avatarUrl = e.detail.avatarUrl;\n      // 1. 下载微信头像到本地（关键步骤）\n      const { tempFilePath } = await uni.downloadFile({ url: avatarUrl });\n      this.tempLocalPath = tempFilePath;\n      // 2. 上传本地文件到MinIO\n      await this.uploadAvatarToMinIO();\n    },\n\n    // 上传头像到MinIO（使用本地路径）\n    async uploadAvatarToMinIO() {\n      if (!this.tempLocalPath) return;\n      \n      uni.showLoading({ title: '上传中...' });\n      \n      try {\n        const token = uni.getStorageSync('token');\n        if (!token) {\n          throw new Error('未找到登录凭证');\n        }\n\n        const uploadRes = await uni.uploadFile({\n          url: `${this.$config.baseUrl}/minio/upload`,\n          filePath: this.tempLocalPath,\n          name: 'file',\n          header: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (uploadRes.statusCode === 200) {\n          const result = JSON.parse(uploadRes.data);\n          if (result.code === 200) {\n            const avatarUrl = result.data.url;\n            const userInfo = uni.getStorageSync('userInfo');\n            await this.updateUserInfo({ \n              id: userInfo.id,\n              avatarUrl: avatarUrl \n            });\n          } else {\n            throw new Error(result.message || '上传失败');\n          }\n        } else {\n          throw new Error(`上传失败，状态码: ${uploadRes.statusCode}`);\n        }\n      } catch (error) {\n        console.error('头像上传失败:', error);\n        uni.showToast({ title: '头像上传失败', icon: 'none' });\n      } finally {\n        uni.hideLoading();\n      }\n    },\n\n    // 处理昵称变化\n    async handleNicknameChange(e) {\n      if (!this.login.show) {\n        uni.showToast({ title: '请先登录', icon: 'none' });\n        return;\n      }\n      \n      const nickname = e.detail.value;\n      if (nickname && nickname.trim() !== '') {\n        const userInfo = uni.getStorageSync('userInfo');\n        await this.updateUserInfo({ \n          id: userInfo.id,\n          nickname: nickname.trim(),\n          avatarUrl: userInfo.avatarUrl || this.login.avatar\n        });\n      }\n    },\n\n    // 通用更新方法\n    async updateUserInfo(params) {\n      try {\n        const userInfo = uni.getStorageSync('userInfo');\n        if (!userInfo || !userInfo.id) {\n          throw new Error('用户未登录或ID缺失');\n        }\n\n        const token = uni.getStorageSync('token');\n        if (!token) {\n          throw new Error('未找到登录凭证');\n        }\n\n        // 确保必填参数存在\n        const requestData = {\n          id: params.id || userInfo.id,\n          avatarUrl: params.avatarUrl || userInfo.avatarUrl || this.login.avatar,\n          ...params\n        };\n\n        const updateRes = await uni.request({\n          url: `${this.$config.baseUrl}/user/updateUserInfo`,\n          method: 'POST',\n          data: requestData,\n          header: { \n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (updateRes.data.code === 200) {\n          // 更新本地存储和组件状态\n          const updatedUserInfo = {\n            ...userInfo,\n            ...params\n          };\n          uni.setStorageSync('userInfo', updatedUserInfo);\n          \n          if (params.nickname) {\n            this.login.nickname = params.nickname;\n          }\n          if (params.avatarUrl) {\n            this.login.avatar = params.avatarUrl;\n          }\n          uni.showToast({ title: '更新成功', icon: 'none' });\n        } else {\n          throw new Error(updateRes.data.message || '更新失败');\n        }\n      } catch (error) {\n        console.error('更新失败:', error);\n        uni.showToast({ title: error.message, icon: 'none' });\n      }\n    },\n\n    // 导航功能\n    navigateTo(page) {\n      if (page === 'basicInfo') {\n        uni.navigateTo({\n          url: '/pages/basicInfo/basicInfo'\n        });\n      } else {\n        uni.navigateTo({ url: `/pages/${page}/${page}` });\n      }\n    },\n\n    // 退出登录\n    handleLogout() {\n      uni.showModal({\n        title: '提示',\n        content: '确定要退出登录吗？',\n        success: (res) => {\n          if (res.confirm) {\n            // 清除所有登录相关信息\n            uni.removeStorageSync('userInfo');\n            uni.removeStorageSync('token');\n            \n            // 重置组件状态\n            this.login.show = false;\n            this.login.avatar = '/static/default_avatar.png';\n            this.login.nickname = '';\n            this.userId = '';\n            this.email = '';\n            this.code = '';\n            \n            uni.showToast({ title: '已退出登录', icon: 'none' });\n          }\n        }\n      });\n    }\n  }\n};\n\n</script>\n\n<style>\n.container {\n  min-height: 100vh;\n  background-color: #f8f9fa;\n  position: relative;\n}\n\n/* 顶部背景 */\n.top-bg {\n  height: 300rpx;\n  background: linear-gradient(135deg, #1a237e 0%, #0d47a1 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n.top-bg::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 120rpx;\n  background: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.1));\n}\n\n/* 主要内容区域 */\n.box {\n  margin: -120rpx 30rpx 0;\n  padding: 40rpx 30rpx;\n  background: #fff;\n  border-radius: 24rpx;\n  box-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.08);\n  position: relative;\n  z-index: 1;\n}\n\n/* 头像区域 */\n.head-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20rpx 0 40rpx;\n}\n\n.avatar-container {\n  position: relative;\n  margin-bottom: 20rpx;\n}\n\n.avatar-btn {\n  padding: 0;\n  width: 160rpx;\n  height: 160rpx;\n  border-radius: 50%;\n  overflow: hidden;\n  background: none;\n  border: 4rpx solid rgba(255, 255, 255, 0.8);\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.avatar-btn:active {\n  transform: scale(0.95);\n}\n\n.head-img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n.tip {\n  font-size: 26rpx;\n  color: #666;\n  margin: 16rpx 0;\n}\n\n/* 昵称输入框 */\n.nickname-container {\n  width: 100%;\n  max-width: 400rpx;\n  margin-top: 16rpx;\n}\n\n.nickname-input {\n  width: 100%;\n  height: 72rpx;\n  background: #f8f9fa;\n  border: 2rpx solid #e0e0e0;\n  border-radius: 36rpx;\n  padding: 0 30rpx;\n  font-size: 28rpx;\n  color: #333;\n  text-align: center;\n  transition: all 0.3s ease;\n}\n\n.nickname-input:focus {\n  border-color: #1a237e;\n  background: #fff;\n  box-shadow: 0 0 0 4rpx rgba(26, 35, 126, 0.1);\n}\n\n/* 登录区域 */\n.login-section {\n  padding: 30rpx 0;\n}\n\n.email-login {\n  margin-bottom: 30rpx;\n}\n\n.email-input,\n.code-input {\n  width: 100%;\n  height: 88rpx;\n  background: #f8f9fa;\n  border: 2rpx solid #e0e0e0;\n  border-radius: 12rpx;\n  padding: 0 24rpx;\n  font-size: 28rpx;\n  color: #333;\n  margin-bottom: 20rpx;\n  transition: all 0.3s ease;\n}\n\n.code-input-group {\n  display: flex;\n  gap: 20rpx;\n  margin-bottom: 20rpx;\n}\n\n.code-input {\n  flex: 1;\n}\n\n.send-code-btn {\n  width: 240rpx;\n  height: 88rpx;\n  background: #1a237e;\n  color: #fff;\n  font-size: 26rpx;\n  border-radius: 12rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.send-code-btn:active {\n  transform: scale(0.98);\n  opacity: 0.9;\n}\n\n.send-code-btn[disabled] {\n  background: #ccc;\n  opacity: 0.7;\n}\n\n/* 分割线 */\n.divider {\n  display: flex;\n  align-items: center;\n  margin: 40rpx 0;\n}\n\n.divider-line {\n  flex: 1;\n  height: 2rpx;\n  background: #e0e0e0;\n}\n\n.divider-text {\n  padding: 0 30rpx;\n  color: #999;\n  font-size: 26rpx;\n}\n\n/* 登录按钮 */\n.login-btn,\n.email-login-btn {\n  width: 100%;\n  height: 88rpx;\n  background: linear-gradient(135deg, #1a237e 0%, #0d47a1 100%);\n  color: #fff;\n  font-size: 32rpx;\n  font-weight: 500;\n  border-radius: 44rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  border: none;\n  margin-bottom: 20rpx;\n}\n\n.login-btn:active,\n.email-login-btn:active {\n  transform: scale(0.98);\n  opacity: 0.9;\n}\n\n/* 功能列表 */\n.function-list {\n  margin-top: 40rpx;\n}\n\n.row {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 30rpx 0;\n  background: none;\n  border: none;\n  border-bottom: 2rpx solid #f0f0f0;\n  transition: all 0.3s ease;\n}\n\n.row:active {\n  background: #f8f9fa;\n}\n\n.left {\n  display: flex;\n  align-items: center;\n  gap: 20rpx;\n}\n\n.icon-small {\n  width: 40rpx;\n  height: 40rpx;\n  color: #1a237e;\n}\n\n.text {\n  font-size: 30rpx;\n  color: #333;\n}\n\n.right {\n  color: #999;\n  font-size: 28rpx;\n}\n\n/* 退出登录按钮 */\n.logout-section {\n  margin-top: 60rpx;\n  padding: 0 30rpx;\n}\n\n.logout-btn {\n  width: 100%;\n  height: 88rpx;\n  background: #f5f5f5;\n  color: #f44336;\n  font-size: 32rpx;\n  font-weight: 500;\n  border-radius: 44rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  border: none;\n}\n\n.logout-btn:active {\n  transform: scale(0.98);\n  background: #ffebee;\n}\n\n/* 页脚 */\n.footer {\n  text-align: center;\n  padding: 40rpx 0;\n  color: #999;\n  font-size: 24rpx;\n}\n\n/* 动画效果 */\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20rpx);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.function-list .row {\n  animation: slideUp 0.3s ease forwards;\n  opacity: 0;\n}\n\n.function-list .row:nth-child(1) { animation-delay: 0.1s; }\n.function-list .row:nth-child(2) { animation-delay: 0.2s; }\n.function-list .row:nth-child(3) { animation-delay: 0.3s; }\n.function-list .row:nth-child(4) { animation-delay: 0.4s; }\n.function-list .row:nth-child(5) { animation-delay: 0.5s; }\n\n/* 暗色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .container {\n    background-color: #121212;\n  }\n  \n  .box {\n    background-color: #1e1e1e;\n  }\n  \n  .tip {\n    color: #999;\n  }\n  \n  .nickname-input,\n  .email-input,\n  .code-input {\n    background: #2d2d2d;\n    border-color: #404040;\n    color: #e0e0e0;\n  }\n  \n  .nickname-input:focus,\n  .email-input:focus,\n  .code-input:focus {\n    border-color: #7986cb;\n    background: #2d2d2d;\n    box-shadow: 0 0 0 4rpx rgba(121, 134, 203, 0.2);\n  }\n  \n  .row {\n    border-bottom-color: #2d2d2d;\n  }\n  \n  .row:active {\n    background: #2d2d2d;\n  }\n  \n  .text {\n    color: #e0e0e0;\n  }\n  \n  .right {\n    color: #666;\n  }\n  \n  .logout-btn {\n    background: #2d2d2d;\n  }\n  \n  .logout-btn:active {\n    background: #3d2d2d;\n  }\n}\n\n/* 无障碍增强 */\nbutton:focus {\n  outline: 4rpx solid #7986cb;\n  outline-offset: 2rpx;\n}\n\ninput:focus {\n  outline: none;\n}\n</style>","import MiniProgramPage from 'D:/JAVAEE/myflies/uniapp-app/uniapp/pages/index/mine.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}