{"version":3,"file":"index.js","sources":["pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-toolbar-button/index.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovSkFWQUVFL215ZmxpZXMvdW5pYXBwLWFwcC91bmlhcHAvcGFnZXMtYWktZGVzay9haS1kZXNrLWN1c3RvbWVyLXVuaWFwcC9jb21wb25lbnRzL0N1c3RvbWVyU2VydmljZUNoYXQvbWVzc2FnZS10b29sYmFyLWJ1dHRvbi9pbmRleC52dWU"],"sourcesContent":["<template>\n  <div class=\"toolbar-button-container\">\n    <template v-for=\"(item, index) in props.toolbarButtonList\">\n      <ToolbarButtonHumanService v-if=\"item.presetId === TOOLBAR_BUTTON_TYPE.HUMAN_SERVICE && shouldRender(item) && !isInHumanService\" :title=\"item.title\" :icon=\"item.icon\"/>\n      <ToolbarButtonServiceRating v-else-if=\"item.presetId === TOOLBAR_BUTTON_TYPE.SERVICE_RATING && shouldRender(item) && isInHumanService\" :title=\"item.title\" :icon=\"item.icon\"/>\n      <ToolbarButtonEndHumanService v-else-if=\"item.presetId === TOOLBAR_BUTTON_TYPE.END_HUMAN_SERVICE && shouldRender(item) && isInHumanService\" :title=\"item.title\" :icon=\"item.icon\"/>\n      <div v-else-if=\"shouldRender(item) && !item.presetId\" :key=\"index\"\n           :class=\"['toolbar-button', isH5 ? 'toolbar-button-h5' : '']\" @click=\"onClick(item, index)\">\n        <Icon v-if=\"item.icon\" class=\"toolbar-button-icon\" :file=\"item.icon\" width=\"18px\" height=\"18px\"/>\n        <div class=\"toolbar-button-text\">\n          {{ item.title }}\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  TUIChatService,\n  TUIStore,\n  StoreName,\n  IConversationModel\n} from '@tencentcloud/chat-uikit-engine';\nimport { isH5 } from '../../../utils/env';\nimport { ToolbarButtonModel } from '../../../interface';\nimport Icon from '../../common/Icon.vue';\nimport { TOOLBAR_BUTTON_TYPE } from '../../../constant';\nimport { isEnabledMessageReadReceiptGlobal, openSafeUrl, getTo } from '../../../utils/utils';\nimport ToolbarButtonHumanService from './toolbar-button-human-service.vue';\nimport ToolbarButtonServiceRating from './toolbar-button-service-rating.vue';\nimport ToolbarButtonEndHumanService from './toolbar-button-end-human-service.vue';\n\nimport vue from '../../../adapter-vue';\nconst { ref, onMounted, onUnmounted } = vue;\n\ninterface IProps {\n  toolbarButtonList?: ToolbarButtonModel[]\n}\n\nconst props = withDefaults(defineProps<IProps>(), {\n  toolbarButtonList: () => [] as ToolbarButtonModel[]\n});\n\nconst isInHumanService = ref(false);\nconst currentConversation = ref<IConversationModel>();\n\nonMounted(() => {\n  TUIStore.watch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdate,\n  });\n  TUIStore.watch(StoreName.CUSTOM, {\n    isInHumanService: onInHumanServiceUpdate,\n  });\n});\n\nonUnmounted(() => {\n  TUIStore.unwatch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdate,\n  });\n  TUIStore.unwatch(StoreName.CUSTOM, {\n    isInHumanService: onInHumanServiceUpdate,\n  });\n});\n\nconst onCurrentConversationUpdate = (conversation: IConversationModel) => {\n  currentConversation.value = conversation;\n}\n\nconst onInHumanServiceUpdate = (value: boolean) => {\n  isInHumanService.value = value;\n};\n\nfunction onClick(item: ToolbarButtonModel, index: number) {\n  if (item.type === 1 && item.content) {\n    TUIChatService.sendTextMessage({\n      to: getTo(currentConversation?.value),\n      conversationType: currentConversation?.value?.type,\n      payload: {\n        text: item.content\n      },\n      needReadReceipt: isEnabledMessageReadReceiptGlobal(),\n    });\n  } else if (item.type === 2  && item.content) {\n    openSafeUrl(item.content);\n  } else if (props.toolbarButtonList !== undefined && typeof props.toolbarButtonList[index].clickEvent === 'function') {\n    props.toolbarButtonList[index].clickEvent();\n  }\n}\n\nfunction shouldRender(item: ToolbarButtonModel) {\n  if (item.isEnabled === 1) {\n    return true;\n  } else if (item.isEnabled === 0) {\n    return false;\n  } else if (item.renderCondition) {\n    return typeof item.renderCondition === 'function' ? item.renderCondition() : false;\n  }\n  return false;\n}\n\n</script>\n<style lang=\"scss\" scoped src=\"./style/index.scss\"></style>\n","import Component from 'D:/JAVAEE/myflies/uniapp-app/uniapp/pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-toolbar-button/index.vue'\nwx.createComponent(Component)"],"names":["vue","TUIStore","StoreName","TUIChatService","getTo","isEnabledMessageReadReceiptGlobal","openSafeUrl"],"mappings":";;;;;;;;;AAyBA,MAAA,OAAiB,MAAA;AAGjB,MAAA,4BAAsC,MAAA;AACtC,MAAA,6BAAuC,MAAA;AACvC,MAAA,+BAAyC,MAAA;;;;;;;AAGzC,UAAM,EAAE,KAAK,WAAW,YAAA,IAAgBA,4CAAAA;AAMxC,UAAM,QAAQ;AAIR,UAAA,mBAAmB,IAAI,KAAK;AAClC,UAAM,sBAAsB;AAE5B,cAAU,MAAM;AACLC,uBAAA,MAAMC,kBAAU,MAAM;AAAA,QAC7B,qBAAqB;AAAA,MAAA,CACtB;AACQD,uBAAA,MAAMC,kBAAU,QAAQ;AAAA,QAC/B,kBAAkB;AAAA,MAAA,CACnB;AAAA,IAAA,CACF;AAED,gBAAY,MAAM;AACPD,uBAAA,QAAQC,kBAAU,MAAM;AAAA,QAC/B,qBAAqB;AAAA,MAAA,CACtB;AACQD,uBAAA,QAAQC,kBAAU,QAAQ;AAAA,QACjC,kBAAkB;AAAA,MAAA,CACnB;AAAA,IAAA,CACF;AAEK,UAAA,8BAA8B,CAAC,iBAAqC;AACxE,0BAAoB,QAAQ;AAAA,IAAA;AAGxB,UAAA,yBAAyB,CAAC,UAAmB;AACjD,uBAAiB,QAAQ;AAAA,IAAA;AAGlB,aAAA,QAAQ,MAA0B,OAAe;;AACxD,UAAI,KAAK,SAAS,KAAK,KAAK,SAAS;AACnCC,sBAAAA,GAAe,gBAAgB;AAAA,UAC7B,IAAIC,6CAAAA,MAAM,2DAAqB,KAAK;AAAA,UACpC,mBAAkB,gEAAqB,UAArB,mBAA4B;AAAA,UAC9C,SAAS;AAAA,YACP,MAAM,KAAK;AAAA,UACb;AAAA,UACA,iBAAiBC,6CAAAA,kCAAkC;AAAA,QAAA,CACpD;AAAA,MACQ,WAAA,KAAK,SAAS,KAAM,KAAK,SAAS;AAC3CC,iEAAY,KAAK,OAAO;AAAA,MAC1B,WAAW,MAAM,sBAAsB,UAAa,OAAO,MAAM,kBAAkB,KAAK,EAAE,eAAe,YAAY;AAC7G,cAAA,kBAAkB,KAAK,EAAE,WAAW;AAAA,MAC5C;AAAA,IACF;AAEA,aAAS,aAAa,MAA0B;AAC1C,UAAA,KAAK,cAAc,GAAG;AACjB,eAAA;AAAA,MAAA,WACE,KAAK,cAAc,GAAG;AACxB,eAAA;AAAA,MAAA,WACE,KAAK,iBAAiB;AAC/B,eAAO,OAAO,KAAK,oBAAoB,aAAa,KAAK,gBAAoB,IAAA;AAAA,MAC/E;AACO,aAAA;AAAA,IACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA,GAAG,gBAAgB,SAAS;"}