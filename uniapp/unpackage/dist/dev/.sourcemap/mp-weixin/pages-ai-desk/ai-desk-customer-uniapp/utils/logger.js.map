{"version":3,"file":"logger.js","sources":["pages-ai-desk/ai-desk-customer-uniapp/utils/logger.js"],"sourcesContent":["import console from './console';\nimport { getDate } from './time';\n\nconst canIUseConsoleStyle = function() {\n  return false;\n}\n\nconst getType = function(input) {\n  return Object.prototype.toString\n    .call(input)\n    .match(/^\\[object (.*)\\]$/)[1]\n    .toLowerCase();\n};\n\nconst isArray = function(input) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(input);\n  }\n  return getType(input) === 'array';\n};\n\nconst isObject = function(input) {\n  // null is object, hence the extra check\n  return input !== null && typeof input === 'object';\n};\n\n/**\n * 检测input是否为Error的实例\n * @param {*} input 任意类型的输入\n * @returns {Boolean} true->input is an instance of Error\n */\nconst isInstanceOfError = function(input) {\n  return (input instanceof Error);\n};\n\n/**\n * 检测input类型是否为数组或者object\n * @param {*} input 任意类型的输入\n * @returns {Boolean} true->input is an array or an object\n */\nconst isArrayOrObject = function(input) {\n  return isArray(input) || isObject(input);\n};\n\n/**\n * 对齐毫秒字符串\n * @param {*} ms 毫秒\n * @returns {String} 对齐后的毫秒时间字符串\n */\nfunction padMs(ms) {\n  const len = ms.toString().length;\n  let ret;\n  switch (len) {\n    case 1:\n      ret = '00' + ms;\n      break;\n    case 2:\n      ret = '0' + ms;\n      break;\n    default:\n      ret = ms;\n      break;\n  }\n\n  return ret;\n}\n\n/**\n * log前缀\n * @returns {String} 日志前缀\n */\nfunction getPrefix() {\n  return 'ai-desk-customer';\n}\n\nfunction getTime() {\n  const date = getDate();\n  return date.toLocaleTimeString('en-US', { hour12: false }) + '.' + padMs(date.getMilliseconds());\n}\n\nconst Log = {\n  // 将函数参数拼成字符串\n  arguments2String(args) {\n    let s = '';\n    if (args.length === 1) {\n      s = args[0];\n    } else {\n\n      for (let i = 0, length = args.length; i < length; i++) {\n        if (isArrayOrObject(args[i])) {\n          try {\n            s += isInstanceOfError(args[i]) ? JSON.stringify(args[i], ['message', 'code']) : JSON.stringify(args[i]);\n          } catch (error) {\n            s += error ? error.message : '';\n            break;\n          }\n        } else {\n          s += args[i];\n        }\n        s += ' ';\n      }\n    }\n    return s;\n  },\n\n  _exec(api, log) {\n    if (!canIUseConsoleStyle()) {\n      console[api](`${getPrefix()} ${getTime()} ${log}`);\n    } else {\n      console[api](getPrefix(), getPrefixStyle(), getBgStyle(), getTime(), log);\n    }\n  },\n\n  /**\n   * 打印调试日志\n   */\n  d: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('debug', s);\n  },\n\n  /**\n   * 打印普通日志\n   */\n  l: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('log', s);\n  },\n\n  /**\n   * 打印普通日志，等同于 Log.i，为了兼容低版本的本地审核插件（其内部调用了 Logger.log）\n   */\n  log: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('log', s);\n  },\n\n  /**\n   * 打印release日志\n   */\n  i: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('info', s);\n  },\n\n  /**\n   * 打印告警日志\n   */\n  w: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('warn', s);\n  },\n\n  /**\n   * 打印错误日志\n   */\n  e: function() {\n    const s = this.arguments2String(arguments);\n    this._exec('error', s);\n  },\n};\n\nexport default Log;\n"],"names":["getDate","console"],"mappings":";;;AAOA,MAAM,UAAU,SAAS,OAAO;AAC9B,SAAO,OAAO,UAAU,SACrB,KAAK,KAAK,EACV,MAAM,mBAAmB,EAAE,CAAC,EAC5B;AACL;AAEA,MAAM,UAAU,SAAS,OAAO;AAC9B,MAAI,OAAO,MAAM,YAAY,YAAY;AACvC,WAAO,MAAM,QAAQ,KAAK;AAAA,EAC3B;AACD,SAAO,QAAQ,KAAK,MAAM;AAC5B;AAEA,MAAM,WAAW,SAAS,OAAO;AAE/B,SAAO,UAAU,QAAQ,OAAO,UAAU;AAC5C;AAOA,MAAM,oBAAoB,SAAS,OAAO;AACxC,SAAQ,iBAAiB;AAC3B;AAOA,MAAM,kBAAkB,SAAS,OAAO;AACtC,SAAO,QAAQ,KAAK,KAAK,SAAS,KAAK;AACzC;AAOA,SAAS,MAAM,IAAI;AACjB,QAAM,MAAM,GAAG,SAAQ,EAAG;AAC1B,MAAI;AACJ,UAAQ,KAAG;AAAA,IACT,KAAK;AACH,YAAM,OAAO;AACb;AAAA,IACF,KAAK;AACH,YAAM,MAAM;AACZ;AAAA,IACF;AACE,YAAM;AACN;AAAA,EACH;AAED,SAAO;AACT;AAMA,SAAS,YAAY;AACnB,SAAO;AACT;AAEA,SAAS,UAAU;AACjB,QAAM,OAAOA,4CAAAA;AACb,SAAO,KAAK,mBAAmB,SAAS,EAAE,QAAQ,OAAO,IAAI,MAAM,MAAM,KAAK,gBAAiB,CAAA;AACjG;AAEK,MAAC,MAAM;AAAA;AAAA,EAEV,iBAAiB,MAAM;AACrB,QAAI,IAAI;AACR,QAAI,KAAK,WAAW,GAAG;AACrB,UAAI,KAAK,CAAC;AAAA,IAChB,OAAW;AAEL,eAAS,IAAI,GAAG,SAAS,KAAK,QAAQ,IAAI,QAAQ,KAAK;AACrD,YAAI,gBAAgB,KAAK,CAAC,CAAC,GAAG;AAC5B,cAAI;AACF,iBAAK,kBAAkB,KAAK,CAAC,CAAC,IAAI,KAAK,UAAU,KAAK,CAAC,GAAG,CAAC,WAAW,MAAM,CAAC,IAAI,KAAK,UAAU,KAAK,CAAC,CAAC;AAAA,UACxG,SAAQ,OAAO;AACd,iBAAK,QAAQ,MAAM,UAAU;AAC7B;AAAA,UACD;AAAA,QACX,OAAe;AACL,eAAK,KAAK,CAAC;AAAA,QACZ;AACD,aAAK;AAAA,MACN;AAAA,IACF;AACD,WAAO;AAAA,EACR;AAAA,EAED,MAAM,KAAK,KAAK;AACc;AAC1BC,qDAAAA,QAAQ,GAAG,EAAE,GAAG,UAAW,CAAA,IAAI,SAAS,IAAI,GAAG,EAAE;AAAA,IAGlD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKD,GAAG,WAAW;AACZ,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,SAAS,CAAC;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKD,GAAG,WAAW;AACZ,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,OAAO,CAAC;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKD,KAAK,WAAW;AACd,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,OAAO,CAAC;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKD,GAAG,WAAW;AACZ,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,QAAQ,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKD,GAAG,WAAW;AACZ,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,QAAQ,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKD,GAAG,WAAW;AACZ,UAAM,IAAI,KAAK,iBAAiB,SAAS;AACzC,SAAK,MAAM,SAAS,CAAC;AAAA,EACtB;AACH;;"}