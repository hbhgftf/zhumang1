{"version":3,"file":"index-uniapp.js","sources":["pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/index-uniapp.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovSkFWQUVFL215ZmxpZXMvdW5pYXBwLWFwcC91bmlhcHAvcGFnZXMtYWktZGVzay9haS1kZXNrLWN1c3RvbWVyLXVuaWFwcC9jb21wb25lbnRzL0N1c3RvbWVyU2VydmljZUNoYXQvaW5kZXgtdW5pYXBwLnZ1ZQ"],"sourcesContent":["<template>\n  <div :class=\"['tui-chat', 'tui-chat-h5']\">\n    <div\n      v-if=\"currentConversationID\"\n      :class=\"['tui-chat', 'tui-chat-h5']\"\n    >\n      <MessageList\n        ref=\"messageListRef\"\n        :class=\"['tui-chat-message-list', 'tui-chat-h5-message-list']\"\n        @handleEditor=\"handleEditor\"\n        @closeInputToolBar=\"() => changeToolbarDisplayType('none')\"\n        @showFormPopup=\"handleShowFormPopup\"\n      />\n      <MessageToolbarButton\n        :toolbarButtonList=\"props.toolbarButtonList\"\n      />\n      <MessageInputToolbar\n        v-if=\"isInputToolbarShow\"\n        :class=\"[\n          'tui-chat-message-input-toolbar',\n          'tui-chat-h5-message-input-toolbar',\n          isUniFrameWork && 'tui-chat-uni-message-input-toolbar',\n        ]\"\n        :displayType=\"inputToolbarDisplayType\"\n        @insertEmoji=\"insertEmoji\"\n        @changeToolbarDisplayType=\"changeToolbarDisplayType\"\n        @scrollToLatestMessage=\"scrollToLatestMessage\"\n      />\n      <MessageInput\n        ref=\"messageInputRef\"\n        :class=\"[\n          'tui-chat-message-input',\n          'tui-chat-h5-message-input',\n          isUniFrameWork && !isH5 && 'tui-chat-uni-message-input',\n          isWeChat && 'tui-chat-wx-message-input',\n          isUniFormShow && 'tui-chat-uni-message-input-hide',\n        ]\"\n        :isMuted=\"isMuted\"\n        :muteText=\"muteText\"\n        :canSendAudio=\"props.canSendAudio\"\n        placeholder=\"\"\n        :inputToolbarDisplayType=\"inputToolbarDisplayType\"\n        @changeToolbarDisplayType=\"changeToolbarDisplayType\"\n      />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport vue from '../../adapter-vue';\nimport TUIChatEngine, {\n  TUITranslateService,\n  TUIStore,\n  StoreName,\n  IMessageModel,\n} from '@tencentcloud/chat-uikit-engine';\nimport TUICore, { TUIConstants } from '@tencentcloud/tui-core';\nimport MessageList from './message-list/index-uniapp.vue';\nimport MessageInput from './message-input/index-uniapp.vue';\nimport MessageInputToolbar from './message-input-toolbar/index-uniapp.vue';\nimport { isWeChat, isUniFrameWork, isH5, isApp } from '../../utils/env';\nimport { ToolbarButtonModel, InputToolbarModel, ToolbarDisplayType } from '../../interface';\nimport { isSupportedLang } from '../../utils/';\nimport Log from '../../utils/logger';\nimport MessageToolbarButton from './message-toolbar-button/index.vue';\nimport TUILocales from '../../locales';\nimport { Toast, TOAST_TYPE } from \"../common/Toast/index-uniapp\";\nimport state from '../../utils/state.js';\n\nconst { ref, onMounted, onUnmounted, computed } = vue;\nconst emits = defineEmits(['closeChat']);\nconst currentConversationID = ref();\nconst inputToolbarDisplayType = ref<ToolbarDisplayType>('none');\nconst messageInputRef = ref();\nconst messageListRef = ref<InstanceType<typeof MessageList>>();\nconst isMuted = ref(false);\nconst muteText = ref('');\nconst isUniFormShow = ref<boolean>(false);\nconst languages = Object.keys(TUILocales);\n\ninterface IProps {\n  robotLang?:string;\n  userLang?:string;\n  canSendAudio?:boolean;\n  toolbarButtonList?:ToolbarButtonModel[];\n  showAvatar?: number;\n  robotAvatar?: string;\n  staffAvatar?: string;\n  userAvatar?: string;\n  showNickName?: number;\n  robotNickName?: string;\n  staffNickName?: string;\n  userNickName?: string;\n  inputToolbarList?: InputToolbarModel[];\n  showReadStatus?: number;\n  showTyping?: number;\n}\n\nconst props = withDefaults(defineProps<IProps>(), {\n  robotLang: '',\n  userLang: '',\n  canSendAudio: false,\n  toolbarButtonList: () => [] as ToolbarButtonModel[],\n  showReadStatus: 1,\n  showAvatar: 1,\n  robotAvatar: '',\n  staffAvatar: '',\n  userAvatar: '',\n  showNickName: 0,\n  robotNickName: '',\n  staffNickName: '',\n  userNickName: '',\n  inputToolbarList: () => [] as InputToobarModel[],\n  showTyping: 0,\n});\n\nconst convertLanguageToLowercase = (language) => {\n  if (!language) {\n    return 'zh';\n  }\n  let lowercase = language.toLowerCase();\n  if (lowercase === 'zh-cn' || lowercase === 'zh_cn') {\n    lowercase = 'zh';\n  } else if (lowercase === 'zh-tw' || lowercase === 'zh-hk') {\n    lowercase = 'zh_tw';\n  }\n  return lowercase;\n}\n\nconst initLanguage = () => {\n  Log.i(`initLanguage ${props.userLang}`);\n  TUITranslateService.provideLanguages({ ...TUILocales });\n  TUITranslateService.useI18n();\n  let language;\n  if (props.userLang !== '') {\n    language = convertLanguageToLowercase(props.userLang);\n    if (!languages.includes(language)) {\n      Log.w(`userLang:${props.userLang} is not supported`);\n      language = 'en';\n    }\n  } else {\n    if (isApp) {\n      const { osLanguage } = uni.getDeviceInfo();\n      Log.i(`initLanguage osLanguage:${osLanguage}`);\n      language = convertLanguageToLowercase(osLanguage);\n    } else if (isWeChat) {\n      language = 'zh';\n    } else if (navigator) {\n      language = convertLanguageToLowercase(navigator.language);\n    }\n\n    if (!languages.includes(language)) {\n      language = 'en';\n    }\n  }\n  TUITranslateService.changeLanguage(language);\n}\n\nconst setAvatarNickName = () => {\n  state.set('avatarNickName',{\n    showAvatar: props.showAvatar,\n    showNickName: props.showNickName,\n    userAvatar: props.userAvatar,\n    staffAvatar: props.staffAvatar,\n    robotAvatar: props.robotAvatar,\n    userNickName: props.userNickName,\n    staffNickName: props.staffNickName,\n    robotNickName: props.robotNickName\n  });\n}\n\nconst setShowReadStatus = () => {\n  state.set('showReadStatus', props.showReadStatus);\n}\n\nconst setShowTyping = () => {\n  state.set('showTyping', props.showTyping);\n}\n\n// 小程序平台暂不支持切换语言\nif (!isWeChat) {\n  initLanguage();\n}\nsetAvatarNickName();\nsetShowReadStatus();\nsetShowTyping();\n\nonMounted(() => {\n  const logPrefix = 'CustomerServiceChat onMounted.';\n  Log.l(`${logPrefix} engineReady:${TUIChatEngine.isReady()}`);\n  if (props.robotLang && !isSupportedLang(props.robotLang)) {\n    Log.w(`${logPrefix} robotLang:${props.robotLang} is not supported`);\n  }\n\n  TUIStore.watch(StoreName.CONV, {\n    currentConversationID: onCurrentConversationIDUpdate,\n  });\n  TUIStore.watch(StoreName.USER, {\n    kickedOut: onKickedOut\n  });\n});\n\nonUnmounted(() => {\n  TUIStore.unwatch(StoreName.CONV, {\n    currentConversationID: onCurrentConversationIDUpdate,\n  });\n  TUIStore.unwatch(StoreName.USER, {\n    kickedOut: onKickedOut\n  });\n});\n\nconst isInputToolbarShow = computed<boolean>(() => {\n  return isUniFrameWork ? inputToolbarDisplayType.value !== 'none' : true;\n});\n\nconst insertEmoji = (emojiObj: object) => {\n  messageInputRef.value?.insertEmoji(emojiObj);\n};\n\nconst handleEditor = (message: IMessageModel, type: string) => {\n  if (!message || !type) return;\n  switch (type) {\n    case 'reference':\n      // todo\n      break;\n    case 'reply':\n      // todo\n      break;\n    case 'reedit':\n      if (message?.payload?.text) {\n        messageInputRef?.value?.reEdit(message?.payload?.text);\n      }\n      break;\n    default:\n      break;\n  }\n};\n\nfunction changeToolbarDisplayType(type: ToolbarDisplayType) {\n  inputToolbarDisplayType.value\n    = inputToolbarDisplayType.value === type ? 'none' : type;\n  if (inputToolbarDisplayType.value !== 'none' && isUniFrameWork) {\n    uni.$emit('scroll-to-bottom');\n  }\n}\n\nfunction scrollToLatestMessage() {\n  messageListRef.value?.scrollToLatestMessage();\n}\n\nfunction onKickedOut(type: string) {\n  if (type) {\n    isMuted.value = true;\n    // muteText.value = TUITranslateService.t('TUIChat.账号被强制下线');\n    Toast({\n      message: TUITranslateService.t('TUIChat.账号被强制下线'),\n      type: TOAST_TYPE.ERROR,\n      duration: 30000,\n    });\n  }\n}\n\nfunction onCurrentConversationIDUpdate(conversationID: string) {\n  if (!conversationID) {\n    return;\n  }\n\n  if (currentConversationID.value === conversationID) {\n    return;\n  }\n\n  currentConversationID.value = conversationID;\n\n  // The TUICustomerServicePlugin plugin determines if the current conversation is a customer service conversation, then sets chatType and activates the conversation.\n  TUICore.callService({\n    serviceName: TUIConstants.TUICustomerServicePlugin.SERVICE.NAME,\n    method: TUIConstants.TUICustomerServicePlugin.SERVICE.METHOD.ACTIVE_CONVERSATION,\n    params: {\n      conversationID: conversationID,\n      robotLang: props.robotLang && isSupportedLang(props.robotLang) ? props.robotLang : undefined,\n    },\n  });\n}\nfunction handleShowFormPopup(data: boolean) {\n  isUniFormShow.value = data;\n}\n</script>\n\n<style scoped lang=\"scss\" src=\"./style/index.scss\"></style>\n","import Component from 'D:/JAVAEE/myflies/uniapp-app/uniapp/pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/index-uniapp.vue'\nwx.createComponent(Component)"],"names":["vue","TUILocales","Log","TUITranslateService","isApp","uni","isWeChat","state","TUIChatEngine","isSupportedLang","TUIStore","StoreName","isUniFrameWork","Toast","TOAST_TYPE","TUICore","TUIConstants"],"mappings":"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"}