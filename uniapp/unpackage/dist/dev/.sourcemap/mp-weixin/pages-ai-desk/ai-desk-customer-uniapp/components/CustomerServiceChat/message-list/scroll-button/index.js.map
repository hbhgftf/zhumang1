{"version":3,"file":"index.js","sources":["pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-list/scroll-button/index.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovSkFWQUVFL215ZmxpZXMvdW5pYXBwLWFwcC91bmlhcHAvcGFnZXMtYWktZGVzay9haS1kZXNrLWN1c3RvbWVyLXVuaWFwcC9jb21wb25lbnRzL0N1c3RvbWVyU2VydmljZUNoYXQvbWVzc2FnZS1saXN0L3Njcm9sbC1idXR0b24vaW5kZXgudnVl"],"sourcesContent":["<template>\n  <div\n    v-if=\"isScrollButtonVisible\"\n    class=\"scroll-button\"\n    @click=\"scrollToMessageListBottom\"\n  >\n    <Icon\n      width=\"10px\"\n      height=\"10px\"\n      :file=\"doubleArrowIcon\"\n    />\n    <div class=\"scroll-button-text\">\n      {{ scrollButtonContent }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport vue from '../../../../adapter-vue';\nconst { ref, onMounted, onUnmounted, computed, watch } = vue;\nimport {\n  TUIStore,\n  StoreName,\n  IMessageModel,\n  IConversationModel,\n  TUITranslateService,\n} from '@tencentcloud/chat-uikit-engine';\nimport Icon from '../../../common/Icon.vue';\nimport doubleArrowIcon from '../../../../assets/double-arrow.svg';\nimport { getBoundingClientRect } from '@tencentcloud/universal-api';\nimport { JSONToObject } from '../../../../utils';\n\n\ninterface IEmits {\n  (key: 'scrollToLatestMessage'): void;\n}\nconst emits = defineEmits<IEmits>();\n\nconst messageList = ref<IMessageModel[]>([]);\nconst currentConversationID = ref<string>('');\nconst currentLastMessageTime = ref<number>(0);\nconst newMessageCount = ref<number>(0);\nconst isScrollOverOneScreen = ref<boolean>(false);\nconst isExistLastMessage = ref<boolean>(false);\nconst isScrollButtonVisible = ref<boolean>(false);\nconst scrollButtonContent = computed(() =>\n  newMessageCount.value\n    ? `${newMessageCount.value}${TUITranslateService.t('TUIChat.条新消息')}`\n    : TUITranslateService.t('TUIChat.回到最新位置'),\n);\n\nwatch(\n  () => [isScrollOverOneScreen.value, isExistLastMessage.value],\n  () => {\n    isScrollButtonVisible.value\n      = isScrollOverOneScreen.value || isExistLastMessage.value;\n    if (!isScrollButtonVisible.value) {\n      resetNewMessageCount();\n    }\n  },\n  { immediate: true },\n);\n\nonMounted(() => {\n  TUIStore.watch(StoreName.CHAT, {\n    messageList: onMessageListUpdated,\n    newMessageList: onNewMessageListUpdated,\n  });\n  TUIStore.watch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdated,\n  });\n});\n\nonUnmounted(() => {\n  TUIStore.unwatch(StoreName.CHAT, {\n    messageList: onMessageListUpdated,\n    newMessageList: onNewMessageListUpdated,\n  });\n  TUIStore.unwatch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdated,\n  });\n});\n\nfunction isTypingMessage(message: IMessageModel): boolean {\n  return (\n    JSONToObject(message.payload?.data)?.businessID === 'user_typing_status'\n  );\n}\n\nfunction onMessageListUpdated(newMessageList: IMessageModel[]) {\n  messageList.value = newMessageList || [];\n  const lastMessage = messageList.value?.[messageList.value?.length - 1];\n  isExistLastMessage.value = !!(\n    // 过滤在线消息\n    // @ts-ignore\n    lastMessage && !lastMessage?._message._onlineOnlyFlag && lastMessage?.time < currentLastMessageTime?.value\n  );\n}\n\nfunction onNewMessageListUpdated(newMessageList: IMessageModel[]) {\n  if (Array.isArray(newMessageList) && isScrollButtonVisible.value) {\n    newMessageList.forEach((message: IMessageModel) => {\n      if (\n        message\n        && message.conversationID === currentConversationID.value\n        && !message.isDeleted\n        && !message.isRevoked\n        && !isTypingMessage(message)\n        // 过滤在线消息\n        // @ts-ignore\n        && !message._message._onlineOnlyFlag\n      ) {\n        newMessageCount.value += 1;\n      }\n    });\n  }\n}\n\nfunction onCurrentConversationUpdated(\n  conversation: IConversationModel | undefined,\n) {\n  if (conversation?.conversationID !== currentConversationID.value) {\n    resetNewMessageCount();\n  }\n  currentConversationID.value = conversation?.conversationID || '';\n  currentLastMessageTime.value = conversation?.lastMessage?.lastTime || 0;\n}\n\n// When the scroll height of the message list upwards is greater than one screen, show scrolling to the latest tips.\nasync function judgeScrollOverOneScreen(e: Event) {\n  if (e.target) {\n    try {\n      const { height }\n        = (await getBoundingClientRect(\n          `#${(e.target as HTMLElement)?.id}`,\n          'messageList',\n        )) || {};\n      const scrollHeight\n        = (e.target as HTMLElement)?.scrollHeight\n        || (e.detail as HTMLElement)?.scrollHeight;\n      const scrollTop\n        = (e.target as HTMLElement)?.scrollTop\n        || (e.detail as HTMLElement)?.scrollTop\n        || 0;\n      // while scroll over one screen show this scroll button.\n      if (scrollHeight - scrollTop > 2 * height) {\n        isScrollOverOneScreen.value = true;\n        return;\n      }\n      isScrollOverOneScreen.value = false;\n    } catch (error) {\n      isScrollOverOneScreen.value = false;\n    }\n  }\n}\n\n// reset messageSource\nfunction resetMessageSource() {\n  if (TUIStore.getData(StoreName.CHAT, 'messageSource') !== undefined) {\n    TUIStore.update(StoreName.CHAT, 'messageSource', undefined);\n  }\n}\n\n// reset newMessageCount\nfunction resetNewMessageCount() {\n  newMessageCount.value = 0;\n}\n\nfunction scrollToMessageListBottom() {\n  resetMessageSource();\n  resetNewMessageCount();\n  emits('scrollToLatestMessage');\n}\n\nfunction hideScrollButton() {\n  if (isScrollButtonVisible.value) {\n    isScrollButtonVisible.value = false;\n    resetNewMessageCount();\n  }\n}\n\ndefineExpose({\n  judgeScrollOverOneScreen,\n  isScrollButtonVisible,\n  hideScrollButton,\n});\n</script>\n\n<style scoped lang=\"scss\">\n.scroll-button {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: auto;\n  height: 28px;\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 4px 12px -5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n\n  &-text {\n    font-family: PingFangSC-Regular, system-ui;\n    font-size: 10px;\n    color: #147aff;\n    margin-left: 3px;\n    margin-right: 3px;\n  }\n}\n</style>\n","import Component from 'D:/JAVAEE/myflies/uniapp-app/uniapp/pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-list/scroll-button/index.vue'\nwx.createComponent(Component)"],"names":["vue","TUITranslateService","TUIStore","StoreName","JSONToObject","getBoundingClientRect"],"mappings":"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"}