{"version":3,"file":"index-uniapp.js","sources":["pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-input/index-uniapp.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovSkFWQUVFL215ZmxpZXMvdW5pYXBwLWFwcC91bmlhcHAvcGFnZXMtYWktZGVzay9haS1kZXNrLWN1c3RvbWVyLXVuaWFwcC9jb21wb25lbnRzL0N1c3RvbWVyU2VydmljZUNoYXQvbWVzc2FnZS1pbnB1dC9pbmRleC11bmlhcHAudnVl"],"sourcesContent":["<template>\n  <div>\n    <div class=\"message-quote-uni-container\">\n      <MessageQuote\n        :style=\"{ minWidth: 0 }\"\n        :displayType=\"displayType\"\n      />\n    </div>\n    <div :class=\"['message-input',  'message-input-h5']\">\n\n    <div class=\"audio-main-content-line\">\n      <MessageInputAudio\n        v-if=\"isWeChat && props.canSendAudio\"\n        :class=\"{\n          'message-input-wx-audio-open': displayType === 'audio',\n        }\"\n        :isEnableAudio=\"displayType === 'audio'\"\n        @changeDisplayType=\"changeDisplayType\"\n      />\n      <MessageInputEditor\n        v-show=\"displayType === 'editor'\"\n        ref=\"editor\"\n        class=\"message-input-editor\"\n        :placeholder=\"props.placeholder\"\n        :isMuted=\"props.isMuted\"\n        :muteText=\"props.muteText\"\n        :enableInput=\"props.enableInput\"\n        :enableTyping=\"props.enableTyping\"\n        @onTyping=\"onTyping\"\n        @onFocus=\"onFocus\"\n        @isInputNotEmpty=\"isInputNotEmpty\"\n      />\n      <div class=\"icon-face-uniapp\" >\n        <Icon\n          class=\"icon icon-face\"\n          :file=\"faceIcon\"\n          :size=\"'23px'\"\n          :hotAreaSize=\"'3px'\"\n          @onClick=\"changeToolbarDisplayType('emojiPicker')\"\n        />\n      </div>\n      <div v-if=\"!showSendButton\" class=\"icon-tool-uniapp\" >\n        <Icon\n        class=\"icon icon-more\"\n        :file=\"moreIcon\"\n        :size=\"'23px'\"\n        :hotAreaSize=\"'3px'\"\n        @onClick=\"changeToolbarDisplayType('tools')\"\n      />\n      </div>\n      <div v-if=\"showSendButton\" class=\"send-button\" @click=\"sendMessage\">\n        <Icon :file=\"sendButtonIcon\" width=\"35px\" height=\"35px\"/>\n      </div>\n    </div>\n\n  </div>\n  </div>\n\n</template>\n<script setup lang=\"ts\">\nimport {\n  TUIStore,\n  StoreName,\n  IMessageModel,\n  IConversationModel,\n} from '@tencentcloud/chat-uikit-engine';\nimport vue from '../../../adapter-vue';\nimport MessageInputEditor from './message-input-editor-uniapp.vue';\nimport MessageInputAudio from './message-input-audio-uniapp.vue';\nimport MessageQuote from './message-input-quote/index.vue';\nimport Icon from '../../common/Icon.vue';\nimport faceIcon from '../../../assets/emoji.png';\nimport moreIcon from '../../../assets/more_tools.png';\nimport { isH5, isWeChat } from '../../../utils/env';\nimport { sendMessages,sendTyping } from '../utils/sendMessage';\nimport { transformTextWithEmojiNamesToKeys } from '../emoji-config';\nimport { ToolbarDisplayType, InputDisplayType } from '../../../interface';\nimport sendButtonIcon from '../../../assets/send-button.svg';\n\nconst { ref, watch, onMounted, onUnmounted } = vue;\n\ninterface IProps {\n  placeholder: string;\n  isMuted?: boolean;\n  muteText?: string;\n  enableInput?: boolean;\n  enableTyping?: boolean;\n  canSendAudio?: boolean;\n  replyOrReference?: Record<string, any>;\n  inputToolbarDisplayType: ToolbarDisplayType;\n}\ninterface IEmits {\n  (e: 'changeToolbarDisplayType', displayType: ToolbarDisplayType): void;\n  (e: 'sendMessage'): void;\n}\n\nconst emits = defineEmits<IEmits>();\nconst props = withDefaults(defineProps<IProps>(), {\n  placeholder: '',\n  replyOrReference: () => ({}),\n  isMuted: true,\n  muteText: '',\n  enableInput: true,\n  enableTyping: true,\n  canSendAudio: false,\n  inputToolbarDisplayType: 'none',\n});\n\nconst editor = ref();\nconst currentConversation = ref<IConversationModel>();\nconst displayType = ref<InputDisplayType>('editor');\nconst showSendButton = ref(false);\n\nonMounted(() => {\n  TUIStore.watch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdated,\n  });\n\n  TUIStore.watch(StoreName.CHAT, {\n    quoteMessage: onQuoteMessageUpdated,\n  });\n});\n\nonUnmounted(() => {\n  TUIStore.unwatch(StoreName.CONV, {\n    currentConversation: onCurrentConversationUpdated,\n  });\n\n  TUIStore.unwatch(StoreName.CHAT, {\n    quoteMessage: onQuoteMessageUpdated,\n  });\n});\n\nwatch(\n  () => props.inputToolbarDisplayType,\n  (newVal: ToolbarDisplayType) => {\n    if (newVal !== 'none') {\n      changeDisplayType('editor');\n    }\n  },\n);\n\nfunction changeDisplayType(display: InputDisplayType) {\n  displayType.value = display;\n  if (display === 'audio') {\n    emits('changeToolbarDisplayType', 'none');\n  }\n}\n\nfunction changeToolbarDisplayType(displayType: ToolbarDisplayType) {\n  emits('changeToolbarDisplayType', displayType);\n}\n\nconst onTyping = (inputContentEmpty: boolean, inputBlur: boolean) => {\n  sendTyping(inputContentEmpty, inputBlur);\n};\n\nconst onFocus = () => {\n  if (isH5) {\n    emits('changeToolbarDisplayType', 'none');\n  }\n};\n\nconst insertEmoji = (emoji: any) => {\n  editor?.value?.addEmoji && editor?.value?.addEmoji(emoji);\n  showSendButton.value = true;\n};\n\nconst reEdit = (content: any) => {\n  editor?.value?.resetEditor();\n  showSendButton.value = false;\n  editor?.value?.setEditorContent(content);\n};\n\nfunction onCurrentConversationUpdated(conversation: IConversationModel) {\n  currentConversation.value = conversation;\n}\n\nfunction onQuoteMessageUpdated(options?: {\n  message: IMessageModel;\n  type: string;\n}) {\n  // switch text input mode when there is a quote message\n  if (options?.message && options?.type === 'quote') {\n    changeDisplayType('editor');\n  }\n}\n\nconst sendMessage = async () => {\n  const _editorContentList = editor.value?.getEditorContent();\n  if (!_editorContentList || !currentConversation.value) return;\n  const editorContentList = _editorContentList.map((editor: any) => {\n    if (editor.type === 'text') {\n      editor.payload.text = transformTextWithEmojiNamesToKeys(\n        editor.payload.text,\n      );\n    }\n    return editor;\n  });\n  await sendMessages(editorContentList, currentConversation.value);\n  editor.value?.resetEditor();\n  showSendButton.value = false;\n};\n\nconst isInputNotEmpty = (show: boolean) => {\n  showSendButton.value = show;\n}\n\ndefineExpose({\n  insertEmoji,\n  reEdit,\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../style/common\";\n\n.icon-face-uniapp{\n  background-color: #fff;\n  padding:5px;\n  border-radius: 0 10px 10px 0;\n}\n.icon-tool-uniapp{\n  background-color: #fff;\n  padding: 3px;\n  margin-left: 10px;\n  border-radius: 10px;\n}\n\n:not(not) {\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  box-sizing: border-box;\n}\n\n.message-quote-uni-container{\n  margin-left:5px;\n}\n\n.message-input {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border: none;\n  overflow: hidden;\n  background: #ebf0f6;\n\n  &-h5 {\n    background-color: transparent;\n    padding: 10px;\n  }\n\n  &-editor {\n    flex: 1;\n    display: flex;\n  }\n\n  .icon {\n  }\n\n  &-wx-audio-open {\n    flex: 1;\n  }\n}\n\n.audio-main-content-line {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.send-button {\n  margin-left: 10px;\n  animation: scaleOnShow 0.4s;\n}\n\n@keyframes scaleOnShow {\n  0% {\n    transform: scale(0.5);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n</style>\n","import Component from 'D:/JAVAEE/myflies/uniapp-app/uniapp/pages-ai-desk/ai-desk-customer-uniapp/components/CustomerServiceChat/message-input/index-uniapp.vue'\nwx.createComponent(Component)"],"names":["vue","TUIStore","StoreName","displayType","sendTyping","isH5","editor","transformTextWithEmojiNamesToKeys","sendMessages"],"mappings":";;;;;;;;;;AAmEA,MAAA,qBAA+B,MAAA;AAC/B,MAAA,oBAA8B,MAAA;AAC9B,MAAA,eAAyB,MAAA;AACzB,MAAA,OAAiB,MAAA;;;;;;;;;;;;;;;AASjB,UAAM,EAAE,KAAK,OAAO,WAAW,gBAAgBA,4CAAAA;AAiB/C,UAAM,QAAQ;AACd,UAAM,QAAQ;AAWd,UAAM,SAAS;AACf,UAAM,sBAAsB;AACtB,UAAA,cAAc,IAAsB,QAAQ;AAC5C,UAAA,iBAAiB,IAAI,KAAK;AAEhC,cAAU,MAAM;AACLC,uBAAA,MAAMC,kBAAU,MAAM;AAAA,QAC7B,qBAAqB;AAAA,MAAA,CACtB;AAEQD,uBAAA,MAAMC,kBAAU,MAAM;AAAA,QAC7B,cAAc;AAAA,MAAA,CACf;AAAA,IAAA,CACF;AAED,gBAAY,MAAM;AACPD,uBAAA,QAAQC,kBAAU,MAAM;AAAA,QAC/B,qBAAqB;AAAA,MAAA,CACtB;AAEQD,uBAAA,QAAQC,kBAAU,MAAM;AAAA,QAC/B,cAAc;AAAA,MAAA,CACf;AAAA,IAAA,CACF;AAED;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAA+B;AAC9B,YAAI,WAAW,QAAQ;AACrB,4BAAkB,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IAAA;AAGF,aAAS,kBAAkB,SAA2B;AACpD,kBAAY,QAAQ;AACpB,UAAI,YAAY,SAAS;AACvB,cAAM,4BAA4B,MAAM;AAAA,MAC1C;AAAA,IACF;AAEA,aAAS,yBAAyBC,cAAiC;AACjE,YAAM,4BAA4BA,YAAW;AAAA,IAC/C;AAEM,UAAA,WAAW,CAAC,mBAA4B,cAAuB;AACnEC,mGAAW,mBAAmB,SAAS;AAAA,IAAA;AAGzC,UAAM,UAAU,MAAM;AACpB,UAAIC,iDAAM;AACR,cAAM,4BAA4B,MAAM;AAAA,MAC1C;AAAA,IAAA;AAGI,UAAA,cAAc,CAAC,UAAe;;AAClC,8CAAQ,UAAR,mBAAe,eAAY,sCAAQ,UAAR,mBAAe,SAAS;AACnD,qBAAe,QAAQ;AAAA,IAAA;AAGnB,UAAA,SAAS,CAAC,YAAiB;;AAC/B,6CAAQ,UAAR,mBAAe;AACf,qBAAe,QAAQ;AACf,6CAAA,UAAA,mBAAO,iBAAiB;AAAA,IAAO;AAGzC,aAAS,6BAA6B,cAAkC;AACtE,0BAAoB,QAAQ;AAAA,IAC9B;AAEA,aAAS,sBAAsB,SAG5B;AAED,WAAI,mCAAS,aAAW,mCAAS,UAAS,SAAS;AACjD,0BAAkB,QAAQ;AAAA,MAC5B;AAAA,IACF;AAEA,UAAM,cAAc,YAAY;;AACxB,YAAA,sBAAqB,YAAO,UAAP,mBAAc;AACrC,UAAA,CAAC,sBAAsB,CAAC,oBAAoB;AAAO;AACvD,YAAM,oBAAoB,mBAAmB,IAAI,CAACC,YAAgB;AAC5DA,YAAAA,QAAO,SAAS,QAAQ;AAC1BA,kBAAO,QAAQ,OAAOC,kFAAA;AAAA,YACpBD,QAAO,QAAQ;AAAA,UAAA;AAAA,QAEnB;AACOA,eAAAA;AAAAA,MAAA,CACR;AACK,YAAAE,+FAAa,mBAAmB,oBAAoB,KAAK;AAC/D,mBAAO,UAAP,mBAAc;AACd,qBAAe,QAAQ;AAAA,IAAA;AAGnB,UAAA,kBAAkB,CAAC,SAAkB;AACzC,qBAAe,QAAQ;AAAA,IAAA;AAGZ,aAAA;AAAA,MACX;AAAA,MACA;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClND,GAAG,gBAAgB,SAAS;"}