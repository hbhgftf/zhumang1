{"version":3,"file":"mixin.js","sources":["uni_modules/vk-uview-ui/libs/mixin/mixin.js"],"sourcesContent":["export default {\r\n\tdata() {\r\n\t\treturn {}\r\n\t},\r\n\tonLoad() {\r\n\t\t// getRect挂载到$u上，因为这方法需要使用in(this)，所以无法把它独立成一个单独的文件导出\r\n\t\tthis.$u.getRect = this.$uGetRect\r\n\t},\r\n\tmethods: {\r\n\t\t// 查询节点信息\r\n\t\t// 目前此方法在支付宝小程序中无法获取组件跟接点的尺寸，为支付宝的bug(2020-07-21)\r\n\t\t// 解决办法为在组件根部再套一个没有任何作用的view元素\r\n\t\t$uGetRect(selector, all) {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tuni.createSelectorQuery().\r\n\t\t\t\tin(this)[all ? 'selectAll' : 'select'](selector)\r\n\t\t\t\t\t.boundingClientRect(rect => {\r\n\t\t\t\t\t\tif (all && Array.isArray(rect) && rect.length) {\r\n\t\t\t\t\t\t\tresolve(rect)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!all && rect) {\r\n\t\t\t\t\t\t\tresolve(rect)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.exec()\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetParentData(parentName = '') {\r\n\t\t\t// 避免在created中去定义parent变量\r\n\t\t\tif(!this.parent) this.parent = false;\r\n\t\t\t// 这里的本质原理是，通过获取父组件实例(也即u-radio-group的this)\r\n\t\t\t// 将父组件this中对应的参数，赋值给本组件(u-radio的this)的parentData对象中对应的属性\r\n\t\t\t// 之所以需要这么做，是因为所有端中，头条小程序不支持通过this.parent.xxx去监听父组件参数的变化\r\n\t\t\tthis.parent = this.$u.$parent.call(this, parentName);\r\n\t\t\tif(this.parent) {\r\n\t\t\t\t// 历遍parentData中的属性，将parent中的同名属性赋值给parentData\r\n\t\t\t\tObject.keys(this.parentData).map(key => {\r\n\t\t\t\t\tthis.parentData[key] = this.parent[key];\r\n\t\t\t\t});\r\n\t\t\t\t// #ifdef VUE3\r\n\t\t\t\tthis.parentData.value = this.parent.modelValue;\r\n\t\t\t\t// #endif\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 阻止事件冒泡\r\n\t\tpreventEvent(e) {\r\n\t\t\te && e.stopPropagation && e.stopPropagation()\r\n\t\t}\r\n\t},\r\n\tonReachBottom() {\r\n\t\tuni.$emit('uOnReachBottom')\r\n\t},\r\n\t// #ifdef VUE2\r\n\tbeforeDestroy() {\r\n\t\t// 判断当前页面是否存在parent和chldren，一般在checkbox和checkbox-group父子联动的场景会有此情况\r\n\t\t// 组件销毁时，移除子组件在父组件children数组中的实例，释放资源，避免数据混乱\r\n\t\tif(this.parent && uni.$u.test.array(this.parent.children)) {\r\n\t\t\t// 组件销毁时，移除父组件中的children数组中对应的实例\r\n\t\t\tconst childrenList = this.parent.children\r\n\t\t\tchildrenList.map((child, index) => {\r\n\t\t\t\t// 如果相等，则移除\r\n\t\t\t\tif(child === this) {\r\n\t\t\t\t\tchildrenList.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// #endif\r\n\t\r\n\t// #ifdef VUE3\r\n\tbeforeUnmount() {\r\n\t\t// 判断当前页面是否存在parent和chldren，一般在checkbox和checkbox-group父子联动的场景会有此情况\r\n\t\t// 组件销毁时，移除子组件在父组件children数组中的实例，释放资源，避免数据混乱\r\n\t\tif(this.parent && uni.$u.test.array(this.parent.children)) {\r\n\t\t\t// 组件销毁时，移除父组件中的children数组中对应的实例\r\n\t\t\tconst childrenList = this.parent.children\r\n\t\t\tchildrenList.map((child, index) => {\r\n\t\t\t\t// 如果相等，则移除\r\n\t\t\t\tif(child === this) {\r\n\t\t\t\t\tchildrenList.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// #endif\r\n}\r\n"],"names":["uni"],"mappings":";;AAAA,MAAe,QAAA;AAAA,EACd,OAAO;AACN,WAAO,CAAE;AAAA,EACT;AAAA,EACD,SAAS;AAER,SAAK,GAAG,UAAU,KAAK;AAAA,EACvB;AAAA,EACD,SAAS;AAAA;AAAA;AAAA;AAAA,IAIR,UAAU,UAAU,KAAK;AACxB,aAAO,IAAI,QAAQ,aAAW;AAC7BA,sBAAAA,MAAI,oBAAqB,EACzB,GAAG,IAAI,EAAE,MAAM,cAAc,QAAQ,EAAE,QAAQ,EAC7C,mBAAmB,UAAQ;AAC3B,cAAI,OAAO,MAAM,QAAQ,IAAI,KAAK,KAAK,QAAQ;AAC9C,oBAAQ,IAAI;AAAA,UACZ;AACD,cAAI,CAAC,OAAO,MAAM;AACjB,oBAAQ,IAAI;AAAA,UACZ;AAAA,QACP,CAAM,EACA,KAAM;AAAA,MACZ,CAAI;AAAA,IACD;AAAA,IACD,cAAc,aAAa,IAAI;AAE9B,UAAG,CAAC,KAAK;AAAQ,aAAK,SAAS;AAI/B,WAAK,SAAS,KAAK,GAAG,QAAQ,KAAK,MAAM,UAAU;AACnD,UAAG,KAAK,QAAQ;AAEf,eAAO,KAAK,KAAK,UAAU,EAAE,IAAI,SAAO;AACvC,eAAK,WAAW,GAAG,IAAI,KAAK,OAAO,GAAG;AAAA,QAC3C,CAAK;AAED,aAAK,WAAW,QAAQ,KAAK,OAAO;AAAA,MAEpC;AAAA,IACD;AAAA;AAAA,IAED,aAAa,GAAG;AACf,WAAK,EAAE,mBAAmB,EAAE,gBAAiB;AAAA,IAC7C;AAAA,EACD;AAAA,EACD,gBAAgB;AACfA,kBAAG,MAAC,MAAM,gBAAgB;AAAA,EAC1B;AAAA,EAmBD,gBAAgB;AAGf,QAAG,KAAK,UAAUA,cAAAA,MAAI,GAAG,KAAK,MAAM,KAAK,OAAO,QAAQ,GAAG;AAE1D,YAAM,eAAe,KAAK,OAAO;AACjC,mBAAa,IAAI,CAAC,OAAO,UAAU;AAElC,YAAG,UAAU,MAAM;AAClB,uBAAa,OAAO,OAAO,CAAC;AAAA,QAC5B;AAAA,MACL,CAAI;AAAA,IACD;AAAA,EACD;AAEF;;"}